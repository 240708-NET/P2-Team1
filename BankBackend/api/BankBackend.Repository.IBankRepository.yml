### YamlMime:ManagedReference
items:
- uid: BankBackend.Repository.IBankRepository
  commentId: T:BankBackend.Repository.IBankRepository
  id: IBankRepository
  parent: BankBackend.Repository
  children:
  - BankBackend.Repository.IBankRepository.AddAccountToUser(BankBackend.Models.Account,System.Int32)
  - BankBackend.Repository.IBankRepository.AddUserToAccount(BankBackend.Models.User,System.Int32)
  - BankBackend.Repository.IBankRepository.CreateAccount(BankBackend.Models.Account)
  - BankBackend.Repository.IBankRepository.CreateTransaction(BankBackend.Models.Transaction)
  - BankBackend.Repository.IBankRepository.CreateUser(BankBackend.Models.User)
  - BankBackend.Repository.IBankRepository.DeleteAccountById(System.Int32)
  - BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId(System.Int32,System.Int32)
  - BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId(System.Int32)
  - BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId(System.Int32,System.Int32)
  - BankBackend.Repository.IBankRepository.DeleteUserById(System.Int32)
  - BankBackend.Repository.IBankRepository.GetAccountByAccountId(System.Int32)
  - BankBackend.Repository.IBankRepository.GetAccountsByUserId(System.Int32)
  - BankBackend.Repository.IBankRepository.GetAllAccounts
  - BankBackend.Repository.IBankRepository.GetAllTransactions
  - BankBackend.Repository.IBankRepository.GetAllUsers
  - BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId(System.Int32)
  - BankBackend.Repository.IBankRepository.GetTransactionByTransactionId(System.Int32)
  - BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount(System.Int32)
  - BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId(System.Int32)
  - BankBackend.Repository.IBankRepository.GetUserByUserId(System.Int32)
  - BankBackend.Repository.IBankRepository.GetUsersByAccountId(System.Int32)
  - BankBackend.Repository.IBankRepository.UpdateBalance(System.Int32,System.Double)
  - BankBackend.Repository.IBankRepository.UpdateName(System.Int32,System.String)
  - BankBackend.Repository.IBankRepository.UpdatePassword(System.Int32,System.String)
  - BankBackend.Repository.IBankRepository.UpdatePrimaryUser(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IBankRepository
  nameWithType: IBankRepository
  fullName: BankBackend.Repository.IBankRepository
  type: Interface
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: IBankRepository
    path: Bank.Repository/IBankRepository.cs
    startLine: 7
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  summary: ''
  example: []
  syntax:
    content: public interface IBankRepository
    content.vb: Public Interface IBankRepository
- uid: BankBackend.Repository.IBankRepository.GetUserByUserId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetUserByUserId(System.Int32)
  id: GetUserByUserId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetUserByUserId(int)
  nameWithType: IBankRepository.GetUserByUserId(int)
  fullName: BankBackend.Repository.IBankRepository.GetUserByUserId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetUserByUserId
    path: Bank.Repository/IBankRepository.cs
    startLine: 10
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: User? GetUserByUserId(int userId)
    parameters:
    - id: userId
      type: System.Int32
    return:
      type: BankBackend.Models.User
    content.vb: Function GetUserByUserId(userId As Integer) As User
  overload: BankBackend.Repository.IBankRepository.GetUserByUserId*
  nameWithType.vb: IBankRepository.GetUserByUserId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetUserByUserId(Integer)
  name.vb: GetUserByUserId(Integer)
- uid: BankBackend.Repository.IBankRepository.GetAllUsers
  commentId: M:BankBackend.Repository.IBankRepository.GetAllUsers
  id: GetAllUsers
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetAllUsers()
  nameWithType: IBankRepository.GetAllUsers()
  fullName: BankBackend.Repository.IBankRepository.GetAllUsers()
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetAllUsers
    path: Bank.Repository/IBankRepository.cs
    startLine: 12
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<User> GetAllUsers()
    return:
      type: System.Collections.Generic.List{BankBackend.Models.User}
    content.vb: Function GetAllUsers() As List(Of User)
  overload: BankBackend.Repository.IBankRepository.GetAllUsers*
- uid: BankBackend.Repository.IBankRepository.GetAccountsByUserId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetAccountsByUserId(System.Int32)
  id: GetAccountsByUserId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetAccountsByUserId(int)
  nameWithType: IBankRepository.GetAccountsByUserId(int)
  fullName: BankBackend.Repository.IBankRepository.GetAccountsByUserId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetAccountsByUserId
    path: Bank.Repository/IBankRepository.cs
    startLine: 14
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<Account>? GetAccountsByUserId(int userId)
    parameters:
    - id: userId
      type: System.Int32
    return:
      type: System.Collections.Generic.List{BankBackend.Models.Account}
    content.vb: Function GetAccountsByUserId(userId As Integer) As List(Of Account)
  overload: BankBackend.Repository.IBankRepository.GetAccountsByUserId*
  nameWithType.vb: IBankRepository.GetAccountsByUserId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetAccountsByUserId(Integer)
  name.vb: GetAccountsByUserId(Integer)
- uid: BankBackend.Repository.IBankRepository.CreateUser(BankBackend.Models.User)
  commentId: M:BankBackend.Repository.IBankRepository.CreateUser(BankBackend.Models.User)
  id: CreateUser(BankBackend.Models.User)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: CreateUser(User)
  nameWithType: IBankRepository.CreateUser(User)
  fullName: BankBackend.Repository.IBankRepository.CreateUser(BankBackend.Models.User)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: CreateUser
    path: Bank.Repository/IBankRepository.cs
    startLine: 16
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: User CreateUser(User user)
    parameters:
    - id: user
      type: BankBackend.Models.User
    return:
      type: BankBackend.Models.User
    content.vb: Function CreateUser(user As User) As User
  overload: BankBackend.Repository.IBankRepository.CreateUser*
- uid: BankBackend.Repository.IBankRepository.UpdatePassword(System.Int32,System.String)
  commentId: M:BankBackend.Repository.IBankRepository.UpdatePassword(System.Int32,System.String)
  id: UpdatePassword(System.Int32,System.String)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: UpdatePassword(int, string)
  nameWithType: IBankRepository.UpdatePassword(int, string)
  fullName: BankBackend.Repository.IBankRepository.UpdatePassword(int, string)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: UpdatePassword
    path: Bank.Repository/IBankRepository.cs
    startLine: 18
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: User? UpdatePassword(int userId, string password)
    parameters:
    - id: userId
      type: System.Int32
    - id: password
      type: System.String
    return:
      type: BankBackend.Models.User
    content.vb: Function UpdatePassword(userId As Integer, password As String) As User
  overload: BankBackend.Repository.IBankRepository.UpdatePassword*
  nameWithType.vb: IBankRepository.UpdatePassword(Integer, String)
  fullName.vb: BankBackend.Repository.IBankRepository.UpdatePassword(Integer, String)
  name.vb: UpdatePassword(Integer, String)
- uid: BankBackend.Repository.IBankRepository.UpdateName(System.Int32,System.String)
  commentId: M:BankBackend.Repository.IBankRepository.UpdateName(System.Int32,System.String)
  id: UpdateName(System.Int32,System.String)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: UpdateName(int, string)
  nameWithType: IBankRepository.UpdateName(int, string)
  fullName: BankBackend.Repository.IBankRepository.UpdateName(int, string)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: UpdateName
    path: Bank.Repository/IBankRepository.cs
    startLine: 20
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: User? UpdateName(int userId, string name)
    parameters:
    - id: userId
      type: System.Int32
    - id: name
      type: System.String
    return:
      type: BankBackend.Models.User
    content.vb: Function UpdateName(userId As Integer, name As String) As User
  overload: BankBackend.Repository.IBankRepository.UpdateName*
  nameWithType.vb: IBankRepository.UpdateName(Integer, String)
  fullName.vb: BankBackend.Repository.IBankRepository.UpdateName(Integer, String)
  name.vb: UpdateName(Integer, String)
- uid: BankBackend.Repository.IBankRepository.AddAccountToUser(BankBackend.Models.Account,System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.AddAccountToUser(BankBackend.Models.Account,System.Int32)
  id: AddAccountToUser(BankBackend.Models.Account,System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: AddAccountToUser(Account, int)
  nameWithType: IBankRepository.AddAccountToUser(Account, int)
  fullName: BankBackend.Repository.IBankRepository.AddAccountToUser(BankBackend.Models.Account, int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: AddAccountToUser
    path: Bank.Repository/IBankRepository.cs
    startLine: 22
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: User? AddAccountToUser(Account account, int userId)
    parameters:
    - id: account
      type: BankBackend.Models.Account
    - id: userId
      type: System.Int32
    return:
      type: BankBackend.Models.User
    content.vb: Function AddAccountToUser(account As Account, userId As Integer) As User
  overload: BankBackend.Repository.IBankRepository.AddAccountToUser*
  nameWithType.vb: IBankRepository.AddAccountToUser(Account, Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.AddAccountToUser(BankBackend.Models.Account, Integer)
  name.vb: AddAccountToUser(Account, Integer)
- uid: BankBackend.Repository.IBankRepository.DeleteUserById(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.DeleteUserById(System.Int32)
  id: DeleteUserById(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: DeleteUserById(int)
  nameWithType: IBankRepository.DeleteUserById(int)
  fullName: BankBackend.Repository.IBankRepository.DeleteUserById(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: DeleteUserById
    path: Bank.Repository/IBankRepository.cs
    startLine: 24
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: User? DeleteUserById(int userId)
    parameters:
    - id: userId
      type: System.Int32
    return:
      type: BankBackend.Models.User
    content.vb: Function DeleteUserById(userId As Integer) As User
  overload: BankBackend.Repository.IBankRepository.DeleteUserById*
  nameWithType.vb: IBankRepository.DeleteUserById(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.DeleteUserById(Integer)
  name.vb: DeleteUserById(Integer)
- uid: BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId(System.Int32,System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId(System.Int32,System.Int32)
  id: DeleteUserAccountByAccountId(System.Int32,System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: DeleteUserAccountByAccountId(int, int)
  nameWithType: IBankRepository.DeleteUserAccountByAccountId(int, int)
  fullName: BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId(int, int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: DeleteUserAccountByAccountId
    path: Bank.Repository/IBankRepository.cs
    startLine: 26
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Account? DeleteUserAccountByAccountId(int userId, int accountId)
    parameters:
    - id: userId
      type: System.Int32
    - id: accountId
      type: System.Int32
    return:
      type: BankBackend.Models.Account
    content.vb: Function DeleteUserAccountByAccountId(userId As Integer, accountId As Integer) As Account
  overload: BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId*
  nameWithType.vb: IBankRepository.DeleteUserAccountByAccountId(Integer, Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId(Integer, Integer)
  name.vb: DeleteUserAccountByAccountId(Integer, Integer)
- uid: BankBackend.Repository.IBankRepository.GetAccountByAccountId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetAccountByAccountId(System.Int32)
  id: GetAccountByAccountId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetAccountByAccountId(int)
  nameWithType: IBankRepository.GetAccountByAccountId(int)
  fullName: BankBackend.Repository.IBankRepository.GetAccountByAccountId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetAccountByAccountId
    path: Bank.Repository/IBankRepository.cs
    startLine: 30
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Account? GetAccountByAccountId(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
    return:
      type: BankBackend.Models.Account
    content.vb: Function GetAccountByAccountId(accountId As Integer) As Account
  overload: BankBackend.Repository.IBankRepository.GetAccountByAccountId*
  nameWithType.vb: IBankRepository.GetAccountByAccountId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetAccountByAccountId(Integer)
  name.vb: GetAccountByAccountId(Integer)
- uid: BankBackend.Repository.IBankRepository.GetAllAccounts
  commentId: M:BankBackend.Repository.IBankRepository.GetAllAccounts
  id: GetAllAccounts
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetAllAccounts()
  nameWithType: IBankRepository.GetAllAccounts()
  fullName: BankBackend.Repository.IBankRepository.GetAllAccounts()
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetAllAccounts
    path: Bank.Repository/IBankRepository.cs
    startLine: 32
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<Account> GetAllAccounts()
    return:
      type: System.Collections.Generic.List{BankBackend.Models.Account}
    content.vb: Function GetAllAccounts() As List(Of Account)
  overload: BankBackend.Repository.IBankRepository.GetAllAccounts*
- uid: BankBackend.Repository.IBankRepository.GetUsersByAccountId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetUsersByAccountId(System.Int32)
  id: GetUsersByAccountId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetUsersByAccountId(int)
  nameWithType: IBankRepository.GetUsersByAccountId(int)
  fullName: BankBackend.Repository.IBankRepository.GetUsersByAccountId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetUsersByAccountId
    path: Bank.Repository/IBankRepository.cs
    startLine: 34
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<User>? GetUsersByAccountId(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
    return:
      type: System.Collections.Generic.List{BankBackend.Models.User}
    content.vb: Function GetUsersByAccountId(accountId As Integer) As List(Of User)
  overload: BankBackend.Repository.IBankRepository.GetUsersByAccountId*
  nameWithType.vb: IBankRepository.GetUsersByAccountId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetUsersByAccountId(Integer)
  name.vb: GetUsersByAccountId(Integer)
- uid: BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId(System.Int32)
  id: GetPrimaryAccountsByUserId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetPrimaryAccountsByUserId(int)
  nameWithType: IBankRepository.GetPrimaryAccountsByUserId(int)
  fullName: BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetPrimaryAccountsByUserId
    path: Bank.Repository/IBankRepository.cs
    startLine: 36
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<Account>? GetPrimaryAccountsByUserId(int userId)
    parameters:
    - id: userId
      type: System.Int32
    return:
      type: System.Collections.Generic.List{BankBackend.Models.Account}
    content.vb: Function GetPrimaryAccountsByUserId(userId As Integer) As List(Of Account)
  overload: BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId*
  nameWithType.vb: IBankRepository.GetPrimaryAccountsByUserId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId(Integer)
  name.vb: GetPrimaryAccountsByUserId(Integer)
- uid: BankBackend.Repository.IBankRepository.CreateAccount(BankBackend.Models.Account)
  commentId: M:BankBackend.Repository.IBankRepository.CreateAccount(BankBackend.Models.Account)
  id: CreateAccount(BankBackend.Models.Account)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: CreateAccount(Account)
  nameWithType: IBankRepository.CreateAccount(Account)
  fullName: BankBackend.Repository.IBankRepository.CreateAccount(BankBackend.Models.Account)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: CreateAccount
    path: Bank.Repository/IBankRepository.cs
    startLine: 38
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Account CreateAccount(Account account)
    parameters:
    - id: account
      type: BankBackend.Models.Account
    return:
      type: BankBackend.Models.Account
    content.vb: Function CreateAccount(account As Account) As Account
  overload: BankBackend.Repository.IBankRepository.CreateAccount*
- uid: BankBackend.Repository.IBankRepository.UpdateBalance(System.Int32,System.Double)
  commentId: M:BankBackend.Repository.IBankRepository.UpdateBalance(System.Int32,System.Double)
  id: UpdateBalance(System.Int32,System.Double)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: UpdateBalance(int, double)
  nameWithType: IBankRepository.UpdateBalance(int, double)
  fullName: BankBackend.Repository.IBankRepository.UpdateBalance(int, double)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: UpdateBalance
    path: Bank.Repository/IBankRepository.cs
    startLine: 40
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Account? UpdateBalance(int accountId, double balance)
    parameters:
    - id: accountId
      type: System.Int32
    - id: balance
      type: System.Double
    return:
      type: BankBackend.Models.Account
    content.vb: Function UpdateBalance(accountId As Integer, balance As Double) As Account
  overload: BankBackend.Repository.IBankRepository.UpdateBalance*
  nameWithType.vb: IBankRepository.UpdateBalance(Integer, Double)
  fullName.vb: BankBackend.Repository.IBankRepository.UpdateBalance(Integer, Double)
  name.vb: UpdateBalance(Integer, Double)
- uid: BankBackend.Repository.IBankRepository.UpdatePrimaryUser(System.Int32,System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.UpdatePrimaryUser(System.Int32,System.Int32)
  id: UpdatePrimaryUser(System.Int32,System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: UpdatePrimaryUser(int, int)
  nameWithType: IBankRepository.UpdatePrimaryUser(int, int)
  fullName: BankBackend.Repository.IBankRepository.UpdatePrimaryUser(int, int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: UpdatePrimaryUser
    path: Bank.Repository/IBankRepository.cs
    startLine: 42
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Account? UpdatePrimaryUser(int accountId, int userId)
    parameters:
    - id: accountId
      type: System.Int32
    - id: userId
      type: System.Int32
    return:
      type: BankBackend.Models.Account
    content.vb: Function UpdatePrimaryUser(accountId As Integer, userId As Integer) As Account
  overload: BankBackend.Repository.IBankRepository.UpdatePrimaryUser*
  nameWithType.vb: IBankRepository.UpdatePrimaryUser(Integer, Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.UpdatePrimaryUser(Integer, Integer)
  name.vb: UpdatePrimaryUser(Integer, Integer)
- uid: BankBackend.Repository.IBankRepository.AddUserToAccount(BankBackend.Models.User,System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.AddUserToAccount(BankBackend.Models.User,System.Int32)
  id: AddUserToAccount(BankBackend.Models.User,System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: AddUserToAccount(User, int)
  nameWithType: IBankRepository.AddUserToAccount(User, int)
  fullName: BankBackend.Repository.IBankRepository.AddUserToAccount(BankBackend.Models.User, int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: AddUserToAccount
    path: Bank.Repository/IBankRepository.cs
    startLine: 44
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Account? AddUserToAccount(User user, int accountId)
    parameters:
    - id: user
      type: BankBackend.Models.User
    - id: accountId
      type: System.Int32
    return:
      type: BankBackend.Models.Account
    content.vb: Function AddUserToAccount(user As User, accountId As Integer) As Account
  overload: BankBackend.Repository.IBankRepository.AddUserToAccount*
  nameWithType.vb: IBankRepository.AddUserToAccount(User, Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.AddUserToAccount(BankBackend.Models.User, Integer)
  name.vb: AddUserToAccount(User, Integer)
- uid: BankBackend.Repository.IBankRepository.DeleteAccountById(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.DeleteAccountById(System.Int32)
  id: DeleteAccountById(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: DeleteAccountById(int)
  nameWithType: IBankRepository.DeleteAccountById(int)
  fullName: BankBackend.Repository.IBankRepository.DeleteAccountById(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: DeleteAccountById
    path: Bank.Repository/IBankRepository.cs
    startLine: 46
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Account? DeleteAccountById(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
    return:
      type: BankBackend.Models.Account
    content.vb: Function DeleteAccountById(accountId As Integer) As Account
  overload: BankBackend.Repository.IBankRepository.DeleteAccountById*
  nameWithType.vb: IBankRepository.DeleteAccountById(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.DeleteAccountById(Integer)
  name.vb: DeleteAccountById(Integer)
- uid: BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId(System.Int32,System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId(System.Int32,System.Int32)
  id: DeleteAccountUserByUserId(System.Int32,System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: DeleteAccountUserByUserId(int, int)
  nameWithType: IBankRepository.DeleteAccountUserByUserId(int, int)
  fullName: BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId(int, int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: DeleteAccountUserByUserId
    path: Bank.Repository/IBankRepository.cs
    startLine: 48
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: User? DeleteAccountUserByUserId(int accountId, int userId)
    parameters:
    - id: accountId
      type: System.Int32
    - id: userId
      type: System.Int32
    return:
      type: BankBackend.Models.User
    content.vb: Function DeleteAccountUserByUserId(accountId As Integer, userId As Integer) As User
  overload: BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId*
  nameWithType.vb: IBankRepository.DeleteAccountUserByUserId(Integer, Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId(Integer, Integer)
  name.vb: DeleteAccountUserByUserId(Integer, Integer)
- uid: BankBackend.Repository.IBankRepository.GetTransactionByTransactionId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetTransactionByTransactionId(System.Int32)
  id: GetTransactionByTransactionId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetTransactionByTransactionId(int)
  nameWithType: IBankRepository.GetTransactionByTransactionId(int)
  fullName: BankBackend.Repository.IBankRepository.GetTransactionByTransactionId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetTransactionByTransactionId
    path: Bank.Repository/IBankRepository.cs
    startLine: 52
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Transaction? GetTransactionByTransactionId(int transactionId)
    parameters:
    - id: transactionId
      type: System.Int32
    return:
      type: BankBackend.Models.Transaction
    content.vb: Function GetTransactionByTransactionId(transactionId As Integer) As Transaction
  overload: BankBackend.Repository.IBankRepository.GetTransactionByTransactionId*
  nameWithType.vb: IBankRepository.GetTransactionByTransactionId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetTransactionByTransactionId(Integer)
  name.vb: GetTransactionByTransactionId(Integer)
- uid: BankBackend.Repository.IBankRepository.GetAllTransactions
  commentId: M:BankBackend.Repository.IBankRepository.GetAllTransactions
  id: GetAllTransactions
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetAllTransactions()
  nameWithType: IBankRepository.GetAllTransactions()
  fullName: BankBackend.Repository.IBankRepository.GetAllTransactions()
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetAllTransactions
    path: Bank.Repository/IBankRepository.cs
    startLine: 54
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<Transaction> GetAllTransactions()
    return:
      type: System.Collections.Generic.List{BankBackend.Models.Transaction}
    content.vb: Function GetAllTransactions() As List(Of Transaction)
  overload: BankBackend.Repository.IBankRepository.GetAllTransactions*
- uid: BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount(System.Int32)
  id: GetTransactionsByFromAccount(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetTransactionsByFromAccount(int)
  nameWithType: IBankRepository.GetTransactionsByFromAccount(int)
  fullName: BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetTransactionsByFromAccount
    path: Bank.Repository/IBankRepository.cs
    startLine: 56
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<Transaction> GetTransactionsByFromAccount(int fromAccountId)
    parameters:
    - id: fromAccountId
      type: System.Int32
    return:
      type: System.Collections.Generic.List{BankBackend.Models.Transaction}
    content.vb: Function GetTransactionsByFromAccount(fromAccountId As Integer) As List(Of Transaction)
  overload: BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount*
  nameWithType.vb: IBankRepository.GetTransactionsByFromAccount(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount(Integer)
  name.vb: GetTransactionsByFromAccount(Integer)
- uid: BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId(System.Int32)
  id: GetTransactionsByToAccountId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: GetTransactionsByToAccountId(int)
  nameWithType: IBankRepository.GetTransactionsByToAccountId(int)
  fullName: BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: GetTransactionsByToAccountId
    path: Bank.Repository/IBankRepository.cs
    startLine: 58
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: List<Transaction> GetTransactionsByToAccountId(int toAccountId)
    parameters:
    - id: toAccountId
      type: System.Int32
    return:
      type: System.Collections.Generic.List{BankBackend.Models.Transaction}
    content.vb: Function GetTransactionsByToAccountId(toAccountId As Integer) As List(Of Transaction)
  overload: BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId*
  nameWithType.vb: IBankRepository.GetTransactionsByToAccountId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId(Integer)
  name.vb: GetTransactionsByToAccountId(Integer)
- uid: BankBackend.Repository.IBankRepository.CreateTransaction(BankBackend.Models.Transaction)
  commentId: M:BankBackend.Repository.IBankRepository.CreateTransaction(BankBackend.Models.Transaction)
  id: CreateTransaction(BankBackend.Models.Transaction)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: CreateTransaction(Transaction)
  nameWithType: IBankRepository.CreateTransaction(Transaction)
  fullName: BankBackend.Repository.IBankRepository.CreateTransaction(BankBackend.Models.Transaction)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: CreateTransaction
    path: Bank.Repository/IBankRepository.cs
    startLine: 60
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Transaction CreateTransaction(Transaction transaction)
    parameters:
    - id: transaction
      type: BankBackend.Models.Transaction
    return:
      type: BankBackend.Models.Transaction
    content.vb: Function CreateTransaction(transaction As Transaction) As Transaction
  overload: BankBackend.Repository.IBankRepository.CreateTransaction*
- uid: BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId(System.Int32)
  commentId: M:BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId(System.Int32)
  id: DeleteTransactionByTransactionId(System.Int32)
  parent: BankBackend.Repository.IBankRepository
  langs:
  - csharp
  - vb
  name: DeleteTransactionByTransactionId(int)
  nameWithType: IBankRepository.DeleteTransactionByTransactionId(int)
  fullName: BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId(int)
  type: Method
  source:
    remote:
      path: BankBackend/Bank.Repository/IBankRepository.cs
      branch: repository
      repo: git@github.com:240708-NET/P2-Team1.git
    id: DeleteTransactionByTransactionId
    path: Bank.Repository/IBankRepository.cs
    startLine: 62
  assemblies:
  - BankBackend
  namespace: BankBackend.Repository
  syntax:
    content: Transaction? DeleteTransactionByTransactionId(int transactionId)
    parameters:
    - id: transactionId
      type: System.Int32
    return:
      type: BankBackend.Models.Transaction
    content.vb: Function DeleteTransactionByTransactionId(transactionId As Integer) As Transaction
  overload: BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId*
  nameWithType.vb: IBankRepository.DeleteTransactionByTransactionId(Integer)
  fullName.vb: BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId(Integer)
  name.vb: DeleteTransactionByTransactionId(Integer)
references:
- uid: BankBackend.Repository
  commentId: N:BankBackend.Repository
  href: BankBackend.html
  name: BankBackend.Repository
  nameWithType: BankBackend.Repository
  fullName: BankBackend.Repository
  spec.csharp:
  - uid: BankBackend
    name: BankBackend
    href: BankBackend.html
  - name: .
  - uid: BankBackend.Repository
    name: Repository
    href: BankBackend.Repository.html
  spec.vb:
  - uid: BankBackend
    name: BankBackend
    href: BankBackend.html
  - name: .
  - uid: BankBackend.Repository
    name: Repository
    href: BankBackend.Repository.html
- uid: BankBackend.Repository.IBankRepository.GetUserByUserId*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetUserByUserId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetUserByUserId_System_Int32_
  name: GetUserByUserId
  nameWithType: IBankRepository.GetUserByUserId
  fullName: BankBackend.Repository.IBankRepository.GetUserByUserId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BankBackend.Models.User
  commentId: T:BankBackend.Models.User
  parent: BankBackend.Models
  href: BankBackend.Models.User.html
  name: User
  nameWithType: User
  fullName: BankBackend.Models.User
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BankBackend.Models
  commentId: N:BankBackend.Models
  href: BankBackend.html
  name: BankBackend.Models
  nameWithType: BankBackend.Models
  fullName: BankBackend.Models
  spec.csharp:
  - uid: BankBackend
    name: BankBackend
    href: BankBackend.html
  - name: .
  - uid: BankBackend.Models
    name: Models
    href: BankBackend.Models.html
  spec.vb:
  - uid: BankBackend
    name: BankBackend
    href: BankBackend.html
  - name: .
  - uid: BankBackend.Models
    name: Models
    href: BankBackend.Models.html
- uid: BankBackend.Repository.IBankRepository.GetAllUsers*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetAllUsers
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetAllUsers
  name: GetAllUsers
  nameWithType: IBankRepository.GetAllUsers
  fullName: BankBackend.Repository.IBankRepository.GetAllUsers
- uid: System.Collections.Generic.List{BankBackend.Models.User}
  commentId: T:System.Collections.Generic.List{BankBackend.Models.User}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<User>
  nameWithType: List<User>
  fullName: System.Collections.Generic.List<BankBackend.Models.User>
  nameWithType.vb: List(Of User)
  fullName.vb: System.Collections.Generic.List(Of BankBackend.Models.User)
  name.vb: List(Of User)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BankBackend.Models.User
    name: User
    href: BankBackend.Models.User.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BankBackend.Models.User
    name: User
    href: BankBackend.Models.User.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: BankBackend.Repository.IBankRepository.GetAccountsByUserId*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetAccountsByUserId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetAccountsByUserId_System_Int32_
  name: GetAccountsByUserId
  nameWithType: IBankRepository.GetAccountsByUserId
  fullName: BankBackend.Repository.IBankRepository.GetAccountsByUserId
- uid: System.Collections.Generic.List{BankBackend.Models.Account}
  commentId: T:System.Collections.Generic.List{BankBackend.Models.Account}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Account>
  nameWithType: List<Account>
  fullName: System.Collections.Generic.List<BankBackend.Models.Account>
  nameWithType.vb: List(Of Account)
  fullName.vb: System.Collections.Generic.List(Of BankBackend.Models.Account)
  name.vb: List(Of Account)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BankBackend.Models.Account
    name: Account
    href: BankBackend.Models.Account.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BankBackend.Models.Account
    name: Account
    href: BankBackend.Models.Account.html
  - name: )
- uid: BankBackend.Repository.IBankRepository.CreateUser*
  commentId: Overload:BankBackend.Repository.IBankRepository.CreateUser
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_CreateUser_BankBackend_Models_User_
  name: CreateUser
  nameWithType: IBankRepository.CreateUser
  fullName: BankBackend.Repository.IBankRepository.CreateUser
- uid: BankBackend.Repository.IBankRepository.UpdatePassword*
  commentId: Overload:BankBackend.Repository.IBankRepository.UpdatePassword
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_UpdatePassword_System_Int32_System_String_
  name: UpdatePassword
  nameWithType: IBankRepository.UpdatePassword
  fullName: BankBackend.Repository.IBankRepository.UpdatePassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BankBackend.Repository.IBankRepository.UpdateName*
  commentId: Overload:BankBackend.Repository.IBankRepository.UpdateName
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_UpdateName_System_Int32_System_String_
  name: UpdateName
  nameWithType: IBankRepository.UpdateName
  fullName: BankBackend.Repository.IBankRepository.UpdateName
- uid: BankBackend.Repository.IBankRepository.AddAccountToUser*
  commentId: Overload:BankBackend.Repository.IBankRepository.AddAccountToUser
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_AddAccountToUser_BankBackend_Models_Account_System_Int32_
  name: AddAccountToUser
  nameWithType: IBankRepository.AddAccountToUser
  fullName: BankBackend.Repository.IBankRepository.AddAccountToUser
- uid: BankBackend.Models.Account
  commentId: T:BankBackend.Models.Account
  parent: BankBackend.Models
  href: BankBackend.Models.Account.html
  name: Account
  nameWithType: Account
  fullName: BankBackend.Models.Account
- uid: BankBackend.Repository.IBankRepository.DeleteUserById*
  commentId: Overload:BankBackend.Repository.IBankRepository.DeleteUserById
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_DeleteUserById_System_Int32_
  name: DeleteUserById
  nameWithType: IBankRepository.DeleteUserById
  fullName: BankBackend.Repository.IBankRepository.DeleteUserById
- uid: BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId*
  commentId: Overload:BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_DeleteUserAccountByAccountId_System_Int32_System_Int32_
  name: DeleteUserAccountByAccountId
  nameWithType: IBankRepository.DeleteUserAccountByAccountId
  fullName: BankBackend.Repository.IBankRepository.DeleteUserAccountByAccountId
- uid: BankBackend.Repository.IBankRepository.GetAccountByAccountId*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetAccountByAccountId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetAccountByAccountId_System_Int32_
  name: GetAccountByAccountId
  nameWithType: IBankRepository.GetAccountByAccountId
  fullName: BankBackend.Repository.IBankRepository.GetAccountByAccountId
- uid: BankBackend.Repository.IBankRepository.GetAllAccounts*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetAllAccounts
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetAllAccounts
  name: GetAllAccounts
  nameWithType: IBankRepository.GetAllAccounts
  fullName: BankBackend.Repository.IBankRepository.GetAllAccounts
- uid: BankBackend.Repository.IBankRepository.GetUsersByAccountId*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetUsersByAccountId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetUsersByAccountId_System_Int32_
  name: GetUsersByAccountId
  nameWithType: IBankRepository.GetUsersByAccountId
  fullName: BankBackend.Repository.IBankRepository.GetUsersByAccountId
- uid: BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetPrimaryAccountsByUserId_System_Int32_
  name: GetPrimaryAccountsByUserId
  nameWithType: IBankRepository.GetPrimaryAccountsByUserId
  fullName: BankBackend.Repository.IBankRepository.GetPrimaryAccountsByUserId
- uid: BankBackend.Repository.IBankRepository.CreateAccount*
  commentId: Overload:BankBackend.Repository.IBankRepository.CreateAccount
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_CreateAccount_BankBackend_Models_Account_
  name: CreateAccount
  nameWithType: IBankRepository.CreateAccount
  fullName: BankBackend.Repository.IBankRepository.CreateAccount
- uid: BankBackend.Repository.IBankRepository.UpdateBalance*
  commentId: Overload:BankBackend.Repository.IBankRepository.UpdateBalance
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_UpdateBalance_System_Int32_System_Double_
  name: UpdateBalance
  nameWithType: IBankRepository.UpdateBalance
  fullName: BankBackend.Repository.IBankRepository.UpdateBalance
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: BankBackend.Repository.IBankRepository.UpdatePrimaryUser*
  commentId: Overload:BankBackend.Repository.IBankRepository.UpdatePrimaryUser
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_UpdatePrimaryUser_System_Int32_System_Int32_
  name: UpdatePrimaryUser
  nameWithType: IBankRepository.UpdatePrimaryUser
  fullName: BankBackend.Repository.IBankRepository.UpdatePrimaryUser
- uid: BankBackend.Repository.IBankRepository.AddUserToAccount*
  commentId: Overload:BankBackend.Repository.IBankRepository.AddUserToAccount
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_AddUserToAccount_BankBackend_Models_User_System_Int32_
  name: AddUserToAccount
  nameWithType: IBankRepository.AddUserToAccount
  fullName: BankBackend.Repository.IBankRepository.AddUserToAccount
- uid: BankBackend.Repository.IBankRepository.DeleteAccountById*
  commentId: Overload:BankBackend.Repository.IBankRepository.DeleteAccountById
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_DeleteAccountById_System_Int32_
  name: DeleteAccountById
  nameWithType: IBankRepository.DeleteAccountById
  fullName: BankBackend.Repository.IBankRepository.DeleteAccountById
- uid: BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId*
  commentId: Overload:BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_DeleteAccountUserByUserId_System_Int32_System_Int32_
  name: DeleteAccountUserByUserId
  nameWithType: IBankRepository.DeleteAccountUserByUserId
  fullName: BankBackend.Repository.IBankRepository.DeleteAccountUserByUserId
- uid: BankBackend.Repository.IBankRepository.GetTransactionByTransactionId*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetTransactionByTransactionId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetTransactionByTransactionId_System_Int32_
  name: GetTransactionByTransactionId
  nameWithType: IBankRepository.GetTransactionByTransactionId
  fullName: BankBackend.Repository.IBankRepository.GetTransactionByTransactionId
- uid: BankBackend.Models.Transaction
  commentId: T:BankBackend.Models.Transaction
  parent: BankBackend.Models
  href: BankBackend.Models.Transaction.html
  name: Transaction
  nameWithType: Transaction
  fullName: BankBackend.Models.Transaction
- uid: BankBackend.Repository.IBankRepository.GetAllTransactions*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetAllTransactions
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetAllTransactions
  name: GetAllTransactions
  nameWithType: IBankRepository.GetAllTransactions
  fullName: BankBackend.Repository.IBankRepository.GetAllTransactions
- uid: System.Collections.Generic.List{BankBackend.Models.Transaction}
  commentId: T:System.Collections.Generic.List{BankBackend.Models.Transaction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Transaction>
  nameWithType: List<Transaction>
  fullName: System.Collections.Generic.List<BankBackend.Models.Transaction>
  nameWithType.vb: List(Of Transaction)
  fullName.vb: System.Collections.Generic.List(Of BankBackend.Models.Transaction)
  name.vb: List(Of Transaction)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BankBackend.Models.Transaction
    name: Transaction
    href: BankBackend.Models.Transaction.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BankBackend.Models.Transaction
    name: Transaction
    href: BankBackend.Models.Transaction.html
  - name: )
- uid: BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetTransactionsByFromAccount_System_Int32_
  name: GetTransactionsByFromAccount
  nameWithType: IBankRepository.GetTransactionsByFromAccount
  fullName: BankBackend.Repository.IBankRepository.GetTransactionsByFromAccount
- uid: BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId*
  commentId: Overload:BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_GetTransactionsByToAccountId_System_Int32_
  name: GetTransactionsByToAccountId
  nameWithType: IBankRepository.GetTransactionsByToAccountId
  fullName: BankBackend.Repository.IBankRepository.GetTransactionsByToAccountId
- uid: BankBackend.Repository.IBankRepository.CreateTransaction*
  commentId: Overload:BankBackend.Repository.IBankRepository.CreateTransaction
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_CreateTransaction_BankBackend_Models_Transaction_
  name: CreateTransaction
  nameWithType: IBankRepository.CreateTransaction
  fullName: BankBackend.Repository.IBankRepository.CreateTransaction
- uid: BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId*
  commentId: Overload:BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId
  href: BankBackend.Repository.IBankRepository.html#BankBackend_Repository_IBankRepository_DeleteTransactionByTransactionId_System_Int32_
  name: DeleteTransactionByTransactionId
  nameWithType: IBankRepository.DeleteTransactionByTransactionId
  fullName: BankBackend.Repository.IBankRepository.DeleteTransactionByTransactionId
